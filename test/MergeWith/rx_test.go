package MergeWith

import (
	"fmt"

	_ "github.com/reactivego/rx/generic"
)

// Merging two streams of ints generated by FromInt. The result will be
// perfectly interleaved. The Trampoline scheduler used by Println for
// subscribing together with the specific way FromInt is implemented
// will create a repeatable (deterministic) test run with ideal merge
// behavior.
func Example_simple() {
	FromInt(0, 2, 4).MergeWith(FromInt(1, 3, 5)).Println()
	// Output:
	// 0
	// 1
	// 2
	// 3
	// 4
	// 5
}

// Merging a tree of observable ints.
func Example_tree() {
	o1 := FromInt(0, 4).MergeWith(JustInt(1)).DoOnComplete(func() {
		fmt.Println("a")
	})
	o2 := FromInt(2, 5).MergeWith(JustInt(3)).DoOnComplete(func() {
		fmt.Println("b")
	})
	o1.MergeWith(o2).DoOnComplete(func() {
		fmt.Println("c")
	}).Println()
	// Output:
	// 0
	// 1
	// 2
	// 3
	// 4
	// 5
	// a
	// b
	// c
}
